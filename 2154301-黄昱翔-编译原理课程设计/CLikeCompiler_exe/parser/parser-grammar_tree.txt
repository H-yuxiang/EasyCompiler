program
|-type
|--int
|-identifier
|-(
|-formal_para
|--para_list
|---para
|----int
|----identifier
|---,
|---para_list
|----para
|-----int
|-----identifier
|----,
|----para_list
|-----para
|------int
|------identifier
|-)
|-state_block
|--{
|--inter_declaration
|---inter_argument_declaration
|----int
|----identifier
|---;
|---inter_declaration
|----inter_argument_declaration
|-----int
|-----identifier
|----;
|--state_string
|---state
|----assign_state
|-----identifier
|-----=
|-----expression
|------add_expression
|-------item
|--------divisor
|---------number
|-----;
|---state_string
|----state
|-----if_state
|------if
|------(
|------expression
|-------add_expression
|--------item
|---------divisor
|----------identifier
|-------relop
|-------->
|-------expression
|--------add_expression
|---------item
|----------divisor
|-----------(
|-----------expression
|------------add_expression
|-------------item
|--------------divisor
|---------------identifier
|-------------+
|-------------add_expression
|--------------item
|---------------divisor
|----------------identifier
|-----------)
|------)
|------state_block
|-------{
|-------state_string
|--------state
|---------assign_state
|----------identifier
|----------=
|----------expression
|-----------add_expression
|------------item
|-------------divisor
|--------------identifier
|------------+
|------------add_expression
|-------------item
|--------------divisor
|---------------(
|---------------expression
|----------------add_expression
|-----------------item
|------------------divisor
|-------------------identifier
|------------------*
|------------------item
|-------------------divisor
|--------------------identifier
|-----------------+
|-----------------add_expression
|------------------item
|-------------------divisor
|--------------------number
|---------------)
|----------;
|-------}
|------else
|------state_block
|-------{
|-------state_string
|--------state
|---------assign_state
|----------identifier
|----------=
|----------expression
|-----------add_expression
|------------item
|-------------divisor
|--------------identifier
|----------;
|-------}
|----state_string
|-----state
|------while_state
|-------while
|-------(
|-------expression
|--------add_expression
|---------item
|----------divisor
|-----------identifier
|--------relop
|---------<=
|--------expression
|---------add_expression
|----------item
|-----------divisor
|------------number
|-------)
|-------state_block
|--------{
|--------state_string
|---------state
|----------assign_state
|-----------identifier
|-----------=
|-----------expression
|------------add_expression
|-------------item
|--------------divisor
|---------------identifier
|--------------*
|--------------item
|---------------divisor
|----------------number
|-----------;
|--------}
|-----state_string
|------state
|-------return_state
|--------return
|--------expression
|---------add_expression
|----------item
|-----------divisor
|------------identifier
|--------;
|--}