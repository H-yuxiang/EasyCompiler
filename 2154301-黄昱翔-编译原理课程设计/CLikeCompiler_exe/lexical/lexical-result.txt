1 3 int int
1 11 identifier program
1 12 ( (
1 15 int int
1 17 identifier a
1 18 , ,
1 21 int int
1 23 identifier b
1 24 , ,
1 27 int int
1 29 identifier c
1 30 ) )
2 1 { {
3 4 int int
3 6 identifier i
3 7 ; ;
4 4 int int
4 6 identifier j
4 7 ; ;
5 2 identifier i
5 3 = =
5 4 digit 2
5 5 ; ;
6 3 if if
6 4 ( (
6 5 identifier a
6 6 > >
6 7 ( (
6 8 identifier b
6 9 + +
6 10 identifier c
6 11 ) )
6 12 ) )
7 2 { {
8 3 identifier j
8 4 = =
8 5 identifier a
8 6 + +
8 7 ( (
8 8 identifier b
8 9 * *
8 10 identifier c
8 11 + +
8 12 digit 1
8 13 ) )
8 14 ; ;
9 2 } }
10 5 else else
11 2 { {
12 3 identifier j
12 4 = =
12 5 identifier a
12 6 ; ;
13 2 } }
14 6 while while
14 7 ( (
14 8 identifier i
14 10 <= <=
14 13 digit 100
14 14 ) )
15 2 { {
16 3 identifier i
16 4 = =
16 5 identifier i
16 6 * *
16 7 digit 2
16 8 ; ;
17 2 } }
18 7 return return
18 9 identifier i
18 10 + +
18 11 identifier j
18 12 ; ;
19 1 } }
20 3 int int
20 8 identifier demo
20 9 ( (
20 12 int int
20 14 identifier a
20 15 ) )
21 1 { {
22 2 identifier a
22 3 = =
22 4 identifier a
22 5 + +
22 6 digit 2
22 7 ; ;
23 7 return return
23 9 identifier a
23 10 * *
23 11 digit 2
23 12 ; ;
24 1 } }
25 3 int int
25 5 identifier a
25 6 [ [
25 7 digit 2
25 8 ] ]
25 9 [ [
25 10 digit 2
25 11 ] ]
25 12 ; ;
26 4 void void
26 9 identifier main
26 10 ( (
26 14 void void
26 15 ) )
27 1 { {
28 4 int int
28 7 identifier iu
28 8 ; ;
29 2 identifier a
29 3 [ [
29 4 digit 0
29 5 ] ]
29 6 [ [
29 7 digit 0
29 8 ] ]
29 9 = =
29 10 digit 3
29 11 ; ;
30 3 identifier iu
30 4 = =
30 5 identifier a
30 6 [ [
30 7 digit 0
30 8 ] ]
30 9 [ [
30 10 digit 0
30 11 ] ]
30 12 ; ;
31 2 identifier a
31 3 [ [
31 4 digit 0
31 5 ] ]
31 6 [ [
31 7 digit 1
31 8 ] ]
31 9 = =
31 10 identifier a
31 11 [ [
31 12 digit 0
31 13 ] ]
31 14 [ [
31 15 digit 0
31 16 ] ]
31 17 + +
31 18 digit 1
31 19 ; ;
32 2 identifier a
32 3 [ [
32 4 digit 1
32 5 ] ]
32 6 [ [
32 7 digit 0
32 8 ] ]
32 9 = =
32 10 identifier a
32 11 [ [
32 12 digit 0
32 13 ] ]
32 14 [ [
32 15 digit 1
32 16 ] ]
32 17 + +
32 18 digit 7
32 19 ; ;
33 2 identifier a
33 3 [ [
33 4 digit 1
33 5 ] ]
33 6 [ [
33 7 digit 1
33 8 ] ]
33 9 = =
33 16 identifier program
33 17 ( (
33 18 identifier a
33 19 [ [
33 20 digit 0
33 21 ] ]
33 22 [ [
33 23 digit 0
33 24 ] ]
33 25 , ,
33 26 identifier a
33 27 [ [
33 28 digit 0
33 29 ] ]
33 30 [ [
33 31 digit 1
33 32 ] ]
33 33 , ,
33 37 identifier demo
33 38 ( (
33 39 identifier a
33 40 [ [
33 41 digit 1
33 42 ] ]
33 43 [ [
33 44 digit 0
33 45 ] ]
33 46 ) )
33 47 ) )
33 48 ; ;
34 3 identifier iu
34 4 = =
34 5 identifier a
34 6 [ [
34 7 digit 1
34 8 ] ]
34 9 [ [
34 10 digit 1
34 11 ] ]
34 12 ; ;
35 7 return return
35 8 ; ;
36 1 } }
36 1 # #
